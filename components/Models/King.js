/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 models\King.gltf --output output\King.js --transform 
Files: models\King.gltf [3.79MB] > E:\Downloads\men\output\King-transformed.glb [784.04KB] (79%)
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import skinColor from './skinColor'

const link = `${process.env.NEXT_PUBLIC_CDN}games/Assets/Quaternius/men/King-transformed.glb`

export function Model(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF(link)
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  const { previewConfig, action } = props

  useEffect(() => {

    console.log("Actions", actions)

    // actions[`Idle`].play();

    if (!actions || !action) return

    // Object.values(actions).forEach((a) => a?.stop());

    actions[action]?.stop();

    if (action) {
      actions[action]?.play();
    } else {
      actions[`Idle`]?.play();
    }

  }, [actions, action]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
        </group>
        <group name="King_Body">
          <skinnedMesh name="Cube043" geometry={nodes.Cube043.geometry} material={skinColor(previewConfig, materials.PaletteMaterial001)} skeleton={nodes.Cube043.skeleton} />
          <skinnedMesh name="Cube043_1" geometry={nodes.Cube043_1.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube043_1.skeleton} />
          <skinnedMesh name="Cube043_2" geometry={nodes.Cube043_2.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube043_2.skeleton} />
          <skinnedMesh name="Cube043_3" geometry={nodes.Cube043_3.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube043_3.skeleton} />
          <skinnedMesh name="Cube043_4" geometry={nodes.Cube043_4.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube043_4.skeleton} />
        </group>
        <skinnedMesh name="King_Feet" geometry={nodes.King_Feet.geometry} material={materials.PaletteMaterial001} skeleton={nodes.King_Feet.skeleton} />
        <group name="King_Head">
          <skinnedMesh name="Cube025" geometry={nodes.Cube025.geometry} material={skinColor(previewConfig, materials.PaletteMaterial001)} skeleton={nodes.Cube025.skeleton} />
          <skinnedMesh name="Cube025_1" geometry={nodes.Cube025_1.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube025_1.skeleton} />
          <skinnedMesh name="Cube025_2" geometry={nodes.Cube025_2.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube025_2.skeleton} />
          <skinnedMesh name="Cube025_3" geometry={nodes.Cube025_3.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube025_3.skeleton} />
        </group>
        <group name="King_Legs">
          <skinnedMesh name="Cube051" geometry={nodes.Cube051.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube051.skeleton} />
          <skinnedMesh name="Cube051_1" geometry={nodes.Cube051_1.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube051_1.skeleton} />
          <skinnedMesh name="Cube051_2" geometry={nodes.Cube051_2.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube051_2.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(link)